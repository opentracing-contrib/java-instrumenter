# Copyright 2019 The OpenTracing Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

dist: trusty
language: java
cache:
  directories:
  - ~/.m2
before_install:
- 'export MAVEN_OPTS=-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn &&
   cp settings.xml $HOME/.m2/settings.xml;'
stages:
- install
- test
- deploy
jobs:
  include:
  - stage: install
    jdk: oraclejdk8
    install: rm -rf ~/.m2/build ~/.m2/repository/io/opentracing/contrib/specialagent
    script:
    - 'if [ "$TRAVIS_BRANCH" = "master" ] &&
          [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
        mvn -B -P report install &&
        mvn -B -DrepoToken=$REPO_TOKEN coveralls:report &&
        mvn -B -Dassemble install;
      else
        mvn -B install &&
        mvn -B -Dassemble install;
      fi'
    before_cache: find . -name target -exec rsync -R -r '{}' ~/.m2/build \;
  - stage: install
    jdk: oraclejdk11
    install: rm -rf ~/.m2/build ~/.m2/repository/io/opentracing/contrib/specialagent
    script:
    - 'mvn -B install &&
       mvn -B -Dassemble install;'
    before_cache: find . -name target -exec rsync -R -r '{}' ~/.m2/build \;
  - stage: deploy
    jdk: oraclejdk8
    install: rsync -r ~/.m2/build/ .
    script:
    - 'if [ "$TRAVIS_BRANCH" = "master" ] &&
          [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
        eval "$SIGNING_KEY" | $GPG_EXECUTABLE --fast-import &> /dev/null &&
        mvn -B -Dassemble -P deploy deploy;
      fi'
  - name: "Akka Http [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P akka-http install
  - name: "Akka Http [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P akka-http install
  - name: "Apache HttpClient [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P apache-httpclient install
  - name: "Apache HttpClient [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P apache-httpclient install
  - name: "Apache Thrift [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P thrift install
  - name: "Apache Thrift [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P thrift install
  - name: "AsyncHttpClient [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P asynchttpclient install
  - name: "AsyncHttpClient [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P asynchttpclient install
  - name: "AWS SDK 1 [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P aws-sdk-1 install
  - name: "AWS SDK 1 [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P aws-sdk-1 install
  - name: "AWS SDK 2 [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P aws-sdk-2 install
  - name: "AWS SDK 2 [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P aws-sdk-2 install
  - name: "Cassandra [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P cassandra install
#  - name: "Cassandra [oraclejdk11]" # This is commented out, because Cassandra does not run ok jdk11
#    stage: test
#    jdk: oraclejdk11
#    install: true
#    script: mvn -B -Dtest -P cassandra install
  - name: "ElasticSearch [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P elasticsearch install
  - name: "ElasticSearch [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P elasticsearch install
  - name: "Feign [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P feign install
  - name: "Feign [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P feign install
  - name: "Grizzly Http Client [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P grizzly-http-client install
  - name: "Grizzly Http Client [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P grizzly-http-client install
  - name: "Grizzly Http Server [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P grizzly-http-server install
  - name: "Grizzly Http Server [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P grizzly-http-server install
  - name: "gRPC Http Server [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P grpc install
  - name: "gRPC [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P grpc install
  - name: "Hazelcast [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P hazelcast install
  - name: "Hazelcast [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P hazelcast install
  - name: "Java Concurrent API [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P concurrent install
  - name: "Java Concurrent API [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P concurrent install
  - name: "Java JDBC API [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P jdbc install
  - name: "Java JDBC API [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P jdbc install
  - name: "Java Servlet API: Jetty [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P servlet-jetty install
  - name: "Java Servlet API: Jetty [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P servlet-jetty install
  - name: "Java Servlet API: Tomcat [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P servlet-tomcat install
  - name: "Java Servlet API: Tomcat [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P servlet-tomcat install
  - name: "JAX-RS Client [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P jaxrs install
  - name: "JAX-RS Client [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P jaxrs install
  - name: "Jedis [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P jedis install
  - name: "Jedis [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P jedis install
  - name: "JMS 1 [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P jms-1 install
  - name: "JMS 1 [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P jms-1 install
  - name: "JMS 2 [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P jms-2 install
  - name: "JMS 2 [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P jms-2 install
  - name: "Kafka Client [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P kafka-client install
  - name: "Kafka Client [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P kafka-client install
  - name: "Lettuce [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P lettuce install
  - name: "Lettuce [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P lettuce install
  - name: "MongoDB Driver [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P mongo-driver install
  - name: "MongoDB Driver [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P mongo-driver install
  - name: "Netflix Zuul [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P zuul install
  - name: "Netflix Zuul [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P zuul install
  - name: "OkHttp [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P okhttp install
  - name: "OkHttp [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P okhttp install
  - name: "Play [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P play install
  - name: "Play [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P play install
  - name: "Play WS [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P play-ws install
  - name: "Play WS [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P play-ws install
  - name: "RabbitMQ Client [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P rabbitmq-client install
  - name: "RabbitMQ Client [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P rabbitmq-client install
  - name: "Reactor [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P reactor install
  - name: "Reactor [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P reactor install
  - name: "Redisson [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P redisson install
  - name: "Redisson [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P redisson install
  - name: "RxJava [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P rxjava install
  - name: "RxJava [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P rxjava install
  - name: "Spring JMS [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P spring-jms install
  - name: "Spring JMS [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P spring-jms install
  - name: "Spring Kafka [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P spring-kafka install
  - name: "Spring Kafka [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P spring-kafka install
  - name: "Spring Messaging [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P spring-messaging install
  - name: "Spring Messaging [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P spring-messaging install
  - name: "Spring RabbitMQ [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P spring-rabbitmq install
  - name: "Spring RabbitMQ [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P spring-rabbitmq install
  - name: "Spring Scheduling [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P spring-scheduling install
  - name: "Spring Scheduling [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P spring-scheduling install
  - name: "Spring Web [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P spring-web install
  - name: "Spring Web [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P spring-web install
  - name: "Spring WebFlux [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P spring-webflux install
  - name: "Spring WebFlux [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P spring-webflux install
  - name: "Spring WebSocket [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P spring-websocket install
  - name: "Spring WebSocket [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P spring-websocket install
  - name: "Spring Web MVC [oraclejdk8]"
    stage: test
    jdk: oraclejdk8
    install: true
    script: mvn -B -Dtest -P spring-webmvc install
  - name: "Spring Web MVC [oraclejdk11]"
    stage: test
    jdk: oraclejdk11
    install: true
    script: mvn -B -Dtest -P spring-webmvc install
env:
  global:
  - SECRET=
  - secure: CZ+/lC3Y/VqhU3K64zfbeevIOFuhWsc55YSuKAfGxbGcBVT6H7Nde8mrTgYSPAfOjhC4mkm1UjRYFuYsBYjypU12l3pDzI/MpLTYeHvqbIb2x2dCBSt4szufRa+7E5XmJlmY8h+F02zcBxwUbxbuglNzhrhGIc5NUgQw2xIX4ZohBHeXFoMuOcpEq2FE19XZdpTPIr966pr/OvuxAAX5IwVd1NxZdSFpTOsGWzKPlvIt6OpXcnVWbhDdVVeIldUsEglJcrkiCGqKmlCg0uOSp+iEyp6ElXXUXs7RWYnyTeaXvIP7ECge43jQN5J5FWflPZuGR9QxeahKt5RoVcdRP1RCm+9HqhjU1XitGFNKO9PEYDRk6dhXEZa2YP+5HMDFgKy50zyo69taZe7RJd9Q73JlFsPV4S11OdZgU4+unBBiR1O0ku49HfRZ1UP2tEwHo+R9mcifNmG9LYEvxIlQ99XSkw4onBlUQ+ytSKJZlKHwFDBLlfCVfl2tLkv8hlz6VJv/tD044NZQjDkuSev95NoCkG0zuli9VPla+2evlbFrxgMSGoIDWeBNWd7l05GZ4VyLcnR4lc5YQfIZ/z88ba7ZHCDj8CuMIdyBV/ArlO661cB/Rvd9RJdM7R9Tr3PxgVc/AEM4Cgkft+NnA8qWmatrDWgiej+vP33kzVFfiZg=
  - secure: c6LHjNc/7/R+lRz9sKxwfqOxTZnToyZGMUvA+uK4ZIJ7yT684zbUXPeC9mFmmdcG6G63jp0MUVdmRkp/pqbHqtCNMCfWJlgqBkA/KKyComjC/LiHKyxX7JdTZal+AFc1J1Rp4Kup9FQ23iQOdMtlau1PEgj2SEyCgm54SHLWl52rpFzyIDCXS0pq5ewxDk2wqoHurBuBp7ykShWh8X2YnCEhmGTRM1ALBpDRQ0ZKAO8Jp7sI3GvwNO+Hjt7P/qTp7pXwR4D0JrbNeMfxufPVp/9RUp4tjdkzHkVS/+6YnfdGzk+FTXhT+GOxlqv1homZ/knikvH0NPbffdx6M6DRaEX5QZdvzCPpCIxQ5/YRfJroPxq6g1ikkjBM/x0FeQyvZFf4n9MSWowwAJVY9bpDhFjcBLrWinzXf0aUiK96krPAntEa7MvOls9EAWoJC7X/yBzPH9BaXGnRt8HRLfdJnxe/OW+eUq35olv+fUbndpSBTSxN8r0OhmgS3ZyQaODsGszKKCa2Ifd7iHyPyOw8hQh6PqSWWaGXC3pI0jSWqRxOJZLczJB0hpA+SbszNHCY5uwzfYzyFYpexhyJImzUQc2jcxK5WwbgH/3YC133OFyIYfylEGOSWW96GBwertAMmBibG3slNm9QP3zD+b8fCr9cYN3xiFGIW3AGWzEJEvI=
  - secure: MaLI792mud8xtPizF+VnEg58YMKv0eFjnSiMhTN2E4NG3fZx936hjAxoYa5ESHXhHXPsa5L+K1Ck/EOjUXVJuLFyiEO/JENrk6mLIj/DwPQFeM5RE3wJ4LJNq2bCcOR25WtVM2oZA/yhKaNIiZKtZP5FddtVNCHoyN/3JCYBUHPViRiz7vpVNE3Vfr894h098ukkX5FpSSGeyBx/tXWT1l896IpQZKhZxsLn490ICsMqBrTRQdFCDx2EvBN3JKSYL9avH6sZQ40u5mKZzF3vSIpUKcQFqcn+xWLlZ5eh3R6Aq+8nLic5FjJMTEU/DsswMhVC8okCNlnAgd9F93bBg8iOHCAEoXA6SAoEYBnU5sgaMB33Dfs0iUWpSbgF+IMI8kjGjH18Nt9dQZkf1mguEvyi5PeSDEi9Z+mKygV52WjVOF9T8Zp5SP08nDbG3vyWzywldxfec16WtntZ77iThH7ATFV86DZMcGBomHtc959evD/113UWNVz+S80Rjy/+iqLt6nYIxPmBgnStZUrkMsOHDbRho/q0waomDUfPXTcHiGju3CPTxTjwn2icuk4YyUbcUVbPo01hf4mbX3dhMgcP0FRxsZ41ivv+BrsGRUSddJVbLHswHCzfzEOeyWob6bagfsTf1+m+2//efUSSU6MoScB86qJB+eEJUiL/MRE=
  - secure: OXMFudICdyA+OrPJemeMC7a/f648I55XBnMSJnNtDIrt+rH0IcFS6J6g8g3lJ7Zq7PjwV2f5IVGavQBLjhrwSobIasai0PgwYD4sqyG+z94HehCyy1mH6UrPfa8J1lMiRyAr+Co+5stUiN5Y2BTHAQfFGu0gA2TVc/MXBc5RLR3DQHowKzNu3Ac7csHF4AiRkOONq/tA6Qrsi1v50WLYUs0ovjXnN8T0E6Dy+u/Kh/b3cIdM6bseSN1NZs+IZPw8MXHycZgMranYTEW0ZCH19z0tZ/+dM2zA+nimG1HthCQNnwaYeR7oLlHE7DO5Ohc/rcUj/hHDTOFUqCaBfcIxK85b8kHeNCoQJ2TrzQLsdqBHf7//XU7jmJGSoWNhOEDWzKeX0Le/0selDGZh989u9KoEFN31HXss3a+Y+NfrjMc6szWIQiZIuEKHrl1lrkea/K6+sxiIZHDuosHpUOVoL1jTSKbFoTL0JrMTUV1M4JM2/zCd40E7v51lmOtjuTcLju5+mLIvaJfblJg0iMDKLWyT56CUqRhLe0H13BXoJLDxHS7mejmqZC1wpd/JwdMY7CUx5lbw9/3mVOKeINhHkfdbo1uy//g31jQIU62OHHBdvqw2d7FbCJoAeoV954VIOUv09XNjt3C4bGQAOUlstvQoI06204MA6KnNW+brTf0=
  - secure: ZWjzfyLI4yNrZjw+JoIf2auZ/QrhsthHnTR6xyk/HzaTh8AAaCIH9IjAWBKt6fbJTdx/sl55ByZphA+CPJ5bNO4jpTV6w3f3yV93s5O9U1VR06cZKFXfYTZ0vidgWOdx/P7v/UMMtc3m4sQRAWTWA+SRUmnzBA75at2Ynl3FugAMOT7F22+qMK6tm6RtuVb0yqbCnKiEZINYATEi9erDUVMVGo9ue3LgVJvlPEiuGnPOkLaeHO78tP8I8gN3CC2ZVJEMmk771BAlWoP8MlH3o8hJiOkY57ugk6fw1aT4UrrT2M01wJsHaeXAEd33CoG19GCg79xlCDmGORMZVMyOchw5OlcDkCPqLfW6i8nenH0HrAgTibckdDZ2k3BhdNqD8f6x9bdh7Nc0luAgbT1kLZSWKyecpQZC+WcxxJfJoEVRWmjxy7zYJ4pzgXNRpceARV+tt1/SZ3T0G3W8fhRyrH+TeyTKf+8HPHH2DpIj607uLhLz05wtOgCR2uMu6x8jkuiyy/rAYVpA+WGNYpPuY8d3TkVl3wi/M3LlZCcD6ImcYPittwXzErpKj39oa28d+4IppV/6htcD6RzUxa/OD8lR6L5DtEBgjXeUlyo6iYAcFT+iUz6cbMsSQ8k0LFrmkPiLcPyjBCgUNAyX7bPU5HynKH+qTSoLlbTp9sM6Xt0=
  - secure: TwWjW0P2pTCHb/XdywN8Ax/+efq5KXmvXDGuf1Wowl1Kr9Q7QPPUETaLCCPW66Ysfpw9J0nkuyFG30W60dilA/NIG0mwcYlphE3AUozkiK7YknL+/QmQ3zP9TXm3BZMLTrBz4LDKrIwqVmi+bSmgdw0kjk1j3Ex83Et4YDvgdSM4XmZdfjxxU2//4FItl0c/8oPq0yw0aKkQg/+n0IrA6uh25M8pso+Vg0QeYBemc7uizE0O3B1GMs9y5RoDP8uM+tl8HxHwZHc0UNamMVSltaSMFYRHRjfNb0ad9KIgi9t+tmX3y2Ys/VF+21CBtol3LmbyB3O4uTqawK3ruijzBrUAZI9YrYnLf1tc7zcfTPYElgOZpC5treF/WTAznTw4YUDdFWq6ScLRWbvpZ/HaFlzvU3cWjQ4EMIAhHnfTXHetV7hk295vK2zSq8QQEP9yqJg3YlQQfuKMHRE112MhkPx2EvrAGWC0QKb4dIxveo9aWRH672CiMs640wyhvFhyOeQgjse5UpkUeJexI/NlTBGxRnq+UTnaH0Rwo4eSzM2wawZGz7DRC/FlbeWi9gQ/w9MTb6e3jzqtuDUIHwxcvEBn5PL/TswoJwZhIi75ugFima8yGAsE6R4VdC2bJovCOs69W0XLqPfvt9VteJcMqGcxSqzsP1/P+iaP7Qkh5l0=
  - secure: CuWj1Myvk6vY4X1cWRESRVdbZF4/ZH25KVGKSG40rTRhAGC1zRUhCSydyC/67labdFArOlD0ePPofqSNPQjYz8zVsdJuS0fxgEP1xp+8Ckd/Umvndt3aAk+iKaCPDRziyp/+2/gcYZGZW25kEeC6OEPhb29rUmUAsXlUip8aAfJrgg/B5g8cGS+8us56iO9cLwokuskMT7ZcHCD1BY9G5L6tBDCYHuWM7eF9/6sfYQxfsa4E+HicNSLtOm/b8mrC3lj7beVvX4PpQ1Pxl4Ir6Jm7A7A8bNaizQIwVRfmMOQYfjd6+5Bdev/Iknytsh2tpFIzHm5THzLOHnjwzzF6yyHHN1QlW21vOO5LscxJ/Tih1aQsVb1c8erLPtfY+QZHH6mmCpJP3b/2Y1uc/otT87KPja2gGM/EGTImKBf9WvUsR9CZHJUDRHFGfiAeisq40ISwcRdTM0Pd2GtWnCIdamxgOD7fNDB7ng/qUqFwLhtGRW55ipSpTrQeKICn8lQhTcYU3ZcUkItrbqqM3oRVg8e0wLwiQa3itUUbYmyZbU3XNnqqnfrLszoPYiRImZO4skitT+4IXMDg0Nrh9ZaJcd2w4tJGYR5BgjiUDtY1/Hb9QIX8bYATOSAEC/XZOdvBgK0X9h1wf+pGs9VgfKUedoFA2HoGF2GvvYAO7DAR9AM=
  - secure: dHybO4vNlspbSSx13Rk7k00alanxpGROqtsorIVjTPq7PoT1H4qNSJz0dehC4z8LdZb+2JWhoSOosRMkA25s8RbCaJBnYMHIyPs7wF+6rCC8hhQ3Ucf2oZZ5ubP0g6qF4ty34+rP2oSuanwLZJpsysZCRUw8/6llTHEo8Vl3NNvVINIdk3id2GoLz7ORfchg3Xri5fLOI32msZuqTIIAKtB6SKDKEbVamK/nL0/MSzjbWsNjwYdOy6p04HFxJGq3QFNeKvuSjWPEAcwI5mMb+UDstg0GHGm5v8xyPTl/WGtwQuzSuzRfS8P9GFqdjiKVD+JB5I3mmy1JfoBa3tK83KHMLUQY5jh6iZCbJMQP1kRFSEpq7f0eziuhdLjLxXPZmIU+aFcW61r2jkNOhjFzAoOFEYhNL3pZnufb+1B1RmkC70zG6NpvYv9ZqleUYoChy9LCGJpyYFTQ5jXoJMP3CiRT0lBk+/yZkA2+nf5VksS8+c5UrfHX3QaZtmhwDJKp64I6dBvzS6nYtyctWNKO7Z+xdF4POhrWWuLP9ulpByyKU14otiHVaDMAZZhrw3JjCCZL4Em7eHpBQqYvXqIqzX0OESrTa4sY0vBAPG2CzFZu3p4F7luESdvBIj9488EQXWsamXlSx+bfcq428LQ6M+keVSAJtqLNqN/P/kQBLI0=
